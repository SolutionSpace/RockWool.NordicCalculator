@using REDAirCalculator.Models.ResultViewModels

@inherits Umbraco.Web.Mvc.UmbracoViewPage<FlexMultiCalculator>

@{
    Layout = null;

    DesignCheckViewModel designCheck = TempData["DesignCheck"] as DesignCheckViewModel;

    bool isMulti = (bool)TempData["IsMulti"];
    bool showAll = (bool) TempData["ShowAllResults"];
}

<div class="result-calculations-container">
    <div class="result-calculations-tittle-container">
        <h3 class="result-calculations-tittle">
            @Model.DesignCheckText
        </h3>
    </div>
    <div class="result-calculations-table-container">
        <table class="result-calculations-table border table-striped table-hover table-responsive">
            <colgroup>
                <col class="col-Item-Number col-5">
                <col class="col-Quantity col-3">
                <col class="col-Description col-3">
            </colgroup>
            <thead class="calculations-table-header table-header border-bottom">
                <tr class="border head-border">
                    <th>
                        @Model.ItemNameColText
                    </th>
                    <th>
                        @Model.ItemUnitsOfMeasurementColText
                    </th>
                    <th>
                        @Model.ItemPresentColText
                    </th>
                    <th>
                        @Model.ItemGuaranteedValueColText
                    </th>
                    <th>
                        @Model.ItemUtilisationColText
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="calculations-table-row border">
                    <td>
                        @Model.Value("anchorScrewForceText", fallback: Fallback.ToDefaultValue)
                    </td>
                    <td>
                        @Model.Value("unit1", fallback: Fallback.ToDefaultValue)
                    </td>
                    <td>
                        @TempData["TotalMaxForce"]
                    </td>
                    <td>
                        @TempData["AnchorScrewPull"]
                    </td>
                    <td>
                        @designCheck.AnchorScrewForce
                    </td>
                </tr>
                <tr class="calculations-table-row border">
                    <td>
                        @Model.Value("necessaryPrestressForceText", fallback: Fallback.ToDefaultValue)
                    </td>
                    <td>
                        @Model.Value("unit4", fallback: Fallback.ToDefaultValue)
                    </td>
                    <td>
                        @TempData["NecessaryPrestress"]
                    </td>
                    <td>
                        @TempData["MinPrestressForce"]
                    </td>
                    <td>
                        @designCheck.NecessaryPrestress
                    </td>
                </tr>
                @if (isMulti && showAll)
                {
                    <tr class="calculations-table-row border">
                        <td>
                            @Model.Value("forceInFixedBracketText", fallback: Fallback.ToDefaultValue)
                        </td>
                        <td>
                            @Model.Value("unit1", fallback: Fallback.ToDefaultValue)
                        </td>
                        <td>
                            @TempData["MaxForceFixedBrackets"]
                        </td>
                        <td>
                            @TempData["StrengthFixedBrackets"]
                        </td>
                        <td>
                            @designCheck.ForceInFixedBrackets
                        </td>
                    </tr>
                    <tr class="calculations-table-row border">
                        <td>
                            @Model.Value("forceInSlidingBracketText", fallback: Fallback.ToDefaultValue)
                        </td>
                        <td>
                            @Model.Value("unit1", fallback: Fallback.ToDefaultValue)
                        </td>
                        <td>
                            @TempData["MaxForceSlidingBrackets"]
                        </td>
                        <td>
                            @TempData["StrengthSlidingBrackets"]
                        </td>
                        <td>
                            @designCheck.ForceInSlidingBrackets
                        </td>
                    </tr>
                    <tr class="calculations-table-row border">
                        <td>
                            @Model.Value("bendingInTProfileText", fallback: Fallback.ToDefaultValue)
                        </td>
                        <td>
                            @Model.Value("unit2", fallback: Fallback.ToDefaultValue)
                        </td>
                        <td>
                            @TempData["BendingMomentTProfile"]
                        </td>
                        <td>
                            @TempData["StrengthTProfile"]
                        </td>
                        <td>
                            @designCheck.BendingTProfile
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

